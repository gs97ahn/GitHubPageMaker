<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2022-11-14T21:36:53+09:00</updated><id>/feed.xml</id><title type="html">nogamsung</title><subtitle>Computer Science &amp; Engineering</subtitle><entry><title type="html">Intelligent Information Systems - Selenium</title><link href="/Intelligent_Information-Selenium" rel="alternate" type="text/html" title="Intelligent Information Systems - Selenium" /><published>2022-11-09T00:00:00+09:00</published><updated>2022-11-09T00:00:00+09:00</updated><id>/Intelligent_Information-Selenium</id><content type="html" xml:base="/Intelligent_Information-Selenium">&lt;h3 id=&quot;get-all-the-location&quot;&gt;Get all the location&lt;/h3&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;selenium&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webdriver&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;selenium.webdriver.chrome.options&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Options&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;opts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;opts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_experimental_option&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;prefs&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;download.default_directory&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/Users/gs97ahn/Development/jupyter-notebook-workspace/Excercises/Week10&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webdriver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Chrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/Users/gs97ahn/Development/jupyter-notebook-workspace/Excercises/chromedriver&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;opts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;main_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;http://www.opinet.co.kr/user/main/mainView.do&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;https://www.opinet.co.kr/searRgSelect.do&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;sigungu_xpath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;//*[@id=&quot;SIGUNGU_NM0&quot;]&apos;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gu_list_raw&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;xpath&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sigungu_xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gu_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gu_list_raw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_elements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;tag name&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;option&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;gu_names&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gu_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;gu_names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gu_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gu_names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/11/08/1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;install-all-location-data-in-excel&quot;&gt;Install all location data in excel&lt;/h3&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;tqdm.notebook&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tqdm&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tqdm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gu_names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gu_names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;gu_xpath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;//*[@id=&quot;SIGUNGU_NM0&quot;]&apos;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;xpath&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gu_xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send_keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gu_names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;search_button&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;//*[@id=&quot;searRgSelect&quot;]&apos;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;xpath&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;search_button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;save_excel_button&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;//*[@id=&quot;glopopd_excel&quot;]&apos;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;xpath&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;save_excel_button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/11/08/2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;read-excel-data&quot;&gt;Read excel data&lt;/h3&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;glob&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;glob&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;station_files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;glob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;지역*.xls&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;tmp_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file_name&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;station_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_excel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tmp_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;stations&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/11/08/3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;exception-handling&quot;&gt;Exception Handling&lt;/h3&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;stations_sel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stations_sel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;가격 != &apos;-&apos;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stations_sel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/11/08/4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Intelligent Information Systems Lecture by &lt;a href=&quot;https://www.inu.ac.kr/user/indexSub.do?codyMenuSeq=2236524&amp;amp;siteId=isis&amp;amp;dum=dum&amp;amp;command=empDetail&amp;amp;empNum=20201019&amp;amp;empSearchTab=01&amp;amp;deptCode=&amp;amp;siteId=isis&quot; target=&quot;_blank&quot;&gt;Youhyun Shin&lt;/a&gt; in &lt;a href=&quot;https://www.inu.ac.kr/&quot; target=&quot;_blank&quot;&gt;Incheon National University&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>nogamsung</name></author><category term="comsci" /><summary type="html">Get all the location</summary></entry><entry><title type="html">Big Data - Graph Mining (Roles and Communities)</title><link href="/Big_Data-Graph_Mining_(Roles_and_Communities)" rel="alternate" type="text/html" title="Big Data - Graph Mining (Roles and Communities)" /><published>2022-11-07T22:30:00+09:00</published><updated>2022-11-07T22:30:00+09:00</updated><id>/Big_Data-Graph_Mining_(Roles_and_Communities)</id><content type="html" xml:base="/Big_Data-Graph_Mining_(Roles_and_Communities)">&lt;h3 id=&quot;roles-vs-groups-in-networks&quot;&gt;Roles vs. Groups in Networks&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/11/07/1.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;structural-roles-in-networks&quot;&gt;Structural Roles in Networks&lt;/h2&gt;
&lt;h3 id=&quot;what-are-roles&quot;&gt;What Are Roles?&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Roles are “&lt;strong&gt;functions&lt;/strong&gt;” of nodes in a network:
    &lt;ul&gt;
      &lt;li&gt;Roles of species in ecosystems&lt;/li&gt;
      &lt;li&gt;Roles of individuals in companies&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/11/07/2.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Roles are measured by structural behaviors:
    &lt;ul&gt;
      &lt;li&gt;centers of stars(hub)&lt;/li&gt;
      &lt;li&gt;members of cliques(community)&lt;/li&gt;
      &lt;li&gt;peripheral nodes, etc. (outliers, …)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;example-of-roles&quot;&gt;Example of Roles&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/11/07/3.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;roles-vs-groups-in-networks-1&quot;&gt;Roles vs. Groups in Networks&lt;/h3&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.mmds.org/&quot; target=&quot;_blank&quot;&gt;Mining of Massive Datasets by Jure Leskovec, Anand Rajaraman, Jeff Ullman&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Introduction to Big Data Lecture by &lt;a href=&quot;https://www.inu.ac.kr/user/indexSub.do?codyMenuSeq=2236524&amp;amp;siteId=isis&amp;amp;dum=dum&amp;amp;command=empDetail&amp;amp;empNum=20201168&amp;amp;empSearchTab=01&amp;amp;deptCode=&amp;amp;siteId=isis&quot; target=&quot;_blank&quot;&gt;Daejin Choi&lt;/a&gt; in &lt;a href=&quot;https://www.inu.ac.kr/&quot; target=&quot;_blank&quot;&gt;Incheon National University&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>nogamsung</name></author><category term="comsci" /><summary type="html">Roles vs. Groups in Networks</summary></entry><entry><title type="html">Computer Network - Connection-Oriented Transport TCP</title><link href="/Computer_Network-Connection-Oriented_Trnasport_TCP" rel="alternate" type="text/html" title="Computer Network - Connection-Oriented Transport TCP" /><published>2022-11-07T19:30:00+09:00</published><updated>2022-11-07T19:30:00+09:00</updated><id>/Computer_Network-Connection-Oriented_Trnasport_TCP</id><content type="html" xml:base="/Computer_Network-Connection-Oriented_Trnasport_TCP">&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/10/31/3.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Computer-Networking-Global-James-Kurose/dp/1292405465&quot; target=&quot;_blank&quot;&gt;Computer Networking 8th: A Top-Down Approach by James Kurose and Keith Ross&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Computer Network Lecture by &lt;a href=&quot;https://www.inu.ac.kr/user/indexSub.do?codyMenuSeq=2236524&amp;amp;siteId=isis&amp;amp;dum=dum&amp;amp;command=empDetail&amp;amp;empNum=24017&amp;amp;empSearchTab=01&amp;amp;deptCode=&amp;amp;siteId=isis&quot; target=&quot;_blank&quot;&gt;Seungsik Choi&lt;/a&gt; in &lt;a href=&quot;https://www.inu.ac.kr/&quot; target=&quot;_blank&quot;&gt;Incheon National University&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>nogamsung</name></author><category term="comsci" /><summary type="html"></summary></entry><entry><title type="html">Unreal Engine - Physics Engine</title><link href="/Unreal_Engine-Physics_Engine" rel="alternate" type="text/html" title="Unreal Engine - Physics Engine" /><published>2022-11-01T01:30:00+09:00</published><updated>2022-11-01T01:30:00+09:00</updated><id>/Unreal_Engine-Physics_Engine</id><content type="html" xml:base="/Unreal_Engine-Physics_Engine">&lt;h3 id=&quot;move-an-object&quot;&gt;Move an Object&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Ways to move an object in the game world
    &lt;ul&gt;
      &lt;li&gt;Change coordinates every frame: Use Tick event node to change to location&lt;/li&gt;
      &lt;li&gt;Use timeline&lt;/li&gt;
      &lt;li&gt;Use movement component: Add movement component in an actor or a character&lt;/li&gt;
      &lt;li&gt;Use physics engine&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Ways to use physics engine
    &lt;ul&gt;
      &lt;li&gt;cons: Many parts are unpredictable&lt;/li&gt;
      &lt;li&gt;pros: Not many tasks are required compared to other methods
        &lt;ul&gt;
          &lt;li&gt;If level gets big, it is impossible to work with it, so you will be forced to use physics engine&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;the-necessity-of-physics-engine-in-the-game&quot;&gt;The Necessity of Physics Engine in the Game&lt;/h3&gt;
&lt;p&gt;In the game, it is actually good to implement codes. However, it is very difficult to implement codes for all the
physics acts. You must think whether it would be necessary to use physics engine simulation.&lt;/p&gt;

&lt;h3 id=&quot;physics-engine-status&quot;&gt;Physics Engine Status&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Physics Engine
    &lt;ul&gt;
      &lt;li&gt;PhysX (PhysX SDK)
        &lt;ul&gt;
          &lt;li&gt;Owned by Nvidia (2008 ~ )&lt;/li&gt;
          &lt;li&gt;PC/Console version is free, open source (2018 ~ )&lt;/li&gt;
          &lt;li&gt;GPU acceleration function (rely on GPU)&lt;/li&gt;
          &lt;li&gt;In Unreal engine and Unity&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Havok
        &lt;ul&gt;
          &lt;li&gt;Owned by Microsoft (2015 ~ )&lt;/li&gt;
          &lt;li&gt;Respected and not an open source&lt;/li&gt;
          &lt;li&gt;GPU acceleration is not used and uses CPU caculation instead (pros)&lt;/li&gt;
          &lt;li&gt;Owns AI tool, animation tool, etc.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Etc.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Open Source Physics Engine
    &lt;ul&gt;
      &lt;li&gt;ODE (Open Dynamics Engine)&lt;/li&gt;
      &lt;li&gt;Newton Game Dynamics&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/10/31/5.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;pros-and-cons-of-physics-engine&quot;&gt;Pros and Cons of Physics Engine&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Cons of Physics Engine
    &lt;ul&gt;
      &lt;li&gt;Low reproducibility&lt;/li&gt;
      &lt;li&gt;Very low controllability&lt;/li&gt;
      &lt;li&gt;Difficult for precise situation&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Reciprocity of game and physics engine
    &lt;ul&gt;
      &lt;li&gt;Game is about constructing entertainment&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;physics-engine-and-collision&quot;&gt;Physics Engine and Collision&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Apply physics engine to actor
    &lt;ul&gt;
      &lt;li&gt;Suppose that an actor is a rigid body&lt;/li&gt;
      &lt;li&gt;Physics engine is used on collision volume and not on mesh&lt;/li&gt;
      &lt;li&gt;Actor mesh must have collision volume&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Physics application to collision volume
    &lt;ul&gt;
      &lt;li&gt;Collision volume should not be complicated&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ways-to-use-physics-engine&quot;&gt;Ways to use physics engine&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Physics engine application: Go through the following steps in the actor editor’s &lt;strong&gt;detail&lt;/strong&gt; tab
    &lt;ul&gt;
      &lt;li&gt;Activate &lt;strong&gt;Simulate Physics&lt;/strong&gt; in &lt;strong&gt;Physics&lt;/strong&gt; area
        &lt;ul&gt;
          &lt;li&gt;The &lt;strong&gt;mobility&lt;/strong&gt; property changes to &lt;strong&gt;movable&lt;/strong&gt; automatically&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;actors-physics-property&quot;&gt;Actor’s physics property&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Actor’s physics property
    &lt;ul&gt;
      &lt;li&gt;Start Awake&lt;/li&gt;
      &lt;li&gt;Mass in Kg&lt;/li&gt;
      &lt;li&gt;Enable Gravity&lt;/li&gt;
      &lt;li&gt;Center of Mass Offset&lt;/li&gt;
      &lt;li&gt;Etc.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;physical-material&quot;&gt;Physical Material&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Value related to collision depends on the material&lt;/li&gt;
  &lt;li&gt;Use an &lt;strong&gt;exclusive asset that can input a physics value&lt;/strong&gt;, instead of setting physics value every time&lt;/li&gt;
  &lt;li&gt;Use the physical material to give physics value to similar material meshes&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;physical-materials-core-property&quot;&gt;Physical Material’s Core Property&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Friction
    &lt;ul&gt;
      &lt;li&gt;Friction coefficient: 0 (weak) ~ 1 (strong)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Friction Combine Mode
    &lt;ul&gt;
      &lt;li&gt;Friction occurs when two object make contact -&amp;gt; consider both friction property&lt;/li&gt;
      &lt;li&gt;4 friction combine mode in UE
        &lt;ul&gt;
          &lt;li&gt;Average&lt;/li&gt;
          &lt;li&gt;Multiply&lt;/li&gt;
          &lt;li&gt;Max&lt;/li&gt;
          &lt;li&gt;Min&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Restitution
    &lt;ul&gt;
      &lt;li&gt;Restitution coefficient: 0 (weak restitution) ~ 1 (strong restitution)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Density
    &lt;ul&gt;
      &lt;li&gt;Friction = Friction coefficient * Mass&lt;/li&gt;
      &lt;li&gt;An object’s mass is very important in physics&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;reference&quot;&gt;Reference&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Entertainment Software Lecture by &lt;a href=&quot;https://www.inu.ac.kr/user/indexSub.do?codyMenuSeq=1282578&amp;amp;siteId=isis&amp;amp;dum=dum&amp;amp;command=empDetail&amp;amp;empNum=24008&amp;amp;empSearchTab=01&amp;amp;deptCode=&amp;amp;siteId=isis&quot; target=&quot;_blank&quot;&gt;Jongseung Park&lt;/a&gt; in &lt;a href=&quot;https://www.inu.ac.kr/&quot; target=&quot;_blank&quot;&gt;Incheon National University&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;amp;ejkGb=KOR&amp;amp;barcode=9788968482809&quot; target=&quot;_blank&quot;&gt;실전 게임 제작으로 배우는 언리얼 엔진 4 by 윤인성&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;amp;ejkGb=KOR&amp;amp;barcode=9791156005896&quot; target=&quot;_blank&quot;&gt;언리얼 게임개봘과 시뮬레이션 by 박종승, 오경수&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>nogamsung</name></author><category term="etc" /><summary type="html">Move an Object Ways to move an object in the game world Change coordinates every frame: Use Tick event node to change to location Use timeline Use movement component: Add movement component in an actor or a character Use physics engine Ways to use physics engine cons: Many parts are unpredictable pros: Not many tasks are required compared to other methods If level gets big, it is impossible to work with it, so you will be forced to use physics engine</summary></entry><entry><title type="html">Computer Network - Principles of Reliable Data Transfer</title><link href="/Computer_Network-Principles_of_Reliable_Data_Transfer" rel="alternate" type="text/html" title="Computer Network - Principles of Reliable Data Transfer" /><published>2022-10-31T20:00:00+09:00</published><updated>2022-10-31T20:00:00+09:00</updated><id>/Computer_Network-Principles_of_Reliable_Data_Transfer</id><content type="html" xml:base="/Computer_Network-Principles_of_Reliable_Data_Transfer">&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/10/31/3.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Reliable data transfer protocol&lt;/strong&gt;: Difficult since the layer below the reliable data transfer protocol may be
unreliable.
    &lt;ul&gt;
      &lt;li&gt;E.g. TCP is a reliable data transfer protocol that is implemented on top of an unreliable (IP) end-to-end network
layer.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Unidirectional data transfer&lt;/strong&gt;: Data transfer from sending to the receiving side.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Bidirectional data transfer&lt;/strong&gt;: Reliable full-duplex transfer.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1️⃣-building-a-reliable-data-transfer-protocol&quot;&gt;1️⃣ Building a Reliable Data Transfer Protocol&lt;/h2&gt;
&lt;h3 id=&quot;reliable-data-transfer-over-a-perfectly-reliable-channel-rdt10&quot;&gt;Reliable Data Transfer over a Perfectly Reliable Channel: rdt1.0&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;finite-state machine (FSM)&lt;/strong&gt;: The operation of the rdt1.0 sender and receiver.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/10/31/4.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;the-sending-side-of-rdt&quot;&gt;The sending side of rdt&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Accepts data from the upper layer via the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rdt_send(data)&lt;/code&gt; event.&lt;/li&gt;
  &lt;li&gt;Creates a packet containing the data (via the action &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;make_pkt(data)&lt;/code&gt;) and send the packet into the channel.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In practice, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rdt_send(data)&lt;/code&gt; event would result from a procedure call (for example, to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rdt_send()&lt;/code&gt;) by the
upper-layer application.&lt;/p&gt;

&lt;h4 id=&quot;the-receiving-side-of-rdt&quot;&gt;The receiving side of rdt&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Receives a packet from the underlying channel via the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rdt_rcv(packet)&lt;/code&gt; event.&lt;/li&gt;
  &lt;li&gt;Removes the data from the packet (via the action &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;extract(pakcet, data)&lt;/code&gt;).&lt;/li&gt;
  &lt;li&gt;Passes the data up to the upper layer (via the action &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;deliver_data(data)&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In practice the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rdt_rcv(packet)&lt;/code&gt; event would result from a procedure call (for example, to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rdt_rcv()&lt;/code&gt;) from the lower-
layer protocol.&lt;/p&gt;

&lt;h3 id=&quot;reliable-data-transfer-over-a-channel-with-bit-errors-rdt20&quot;&gt;Reliable Data Transfer over a Channel with Bit Errors: rdt2.0&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Positive acknowledgements&lt;/strong&gt; and &lt;strong&gt;negative acknowledgements&lt;/strong&gt;: The message-dictation protocol that allow the 
receiver to let the sender know what has been received correctly and what has been received in error and tus requires
repeating.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;ARQ (Automatic Repeat reQuest) protocols&lt;/strong&gt;: Reliable data transfer protocols based on such retransmission.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Three additional protocol capabilities required in ARQ protocols to handle the presence of bit errors:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Error detection&lt;/em&gt;. First, a mechanism is needed to allow the receiver to detect when bit error has occurred.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Receiver feedback&lt;/em&gt;. Since the sender and receiver are typically executing on different end systems, possibly
separated by thousands of miles, the only way for the sender to learn of the receiver’s view of the world is for the
receiver to provide explicit feedback to the sender.The positive (ACK) and negative (NAK) acknowledgement replies in the
message-dictation scenario are examples of such feedback.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Retransmission&lt;/em&gt;. A packet that is received in error at the receiver will be retransmitted by the sender.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/10/31/6.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;stop-and-wait protocols&lt;/strong&gt;: The sender will not send a new piece of data until it is sure that the receiver has 
correctly received the current packet.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Three possibilities for handling corrupted ACKs or NAKs:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Consider what a human might do in the message-dictation scenario. If the speaker didn’t understand the “OK” or “Please
repeat that” reply from the receiver, the speaker would probably ask, “What did you say?” The receiver would then repeat
the reply. But what if the speaker’s “What did you say?” is corrupted? The receiver, having no idea whether the garbled 
sentence was part of the dictation or a request to repeat the last reply, would probably then respond with “What did you
say?” And the, of course, that response might be garbled. Clearly, we’re heading down a difficult path.&lt;/li&gt;
  &lt;li&gt;A second alternative is to add enough checksum bits to allow the sender not only to detect, but also to recover from,
bit errors. This solves the immediate problem for a channel that can corrupt packets but not lose them.&lt;/li&gt;
  &lt;li&gt;A third approach is for the sender simply to resend the current data packet when it receives a garbled ACK or NAK 
packet. This approach, however, introduces &lt;strong&gt;duplicate packets&lt;/strong&gt; into the sender-to-receiver channel. The fundamental
difficulty with duplicate packets is that the receiver doesn’t know whether the ACK or NAK it last send was received
correctly at the sender. Thus, it cannot know a priori whether an arriving packet contains new data or is a 
retransmission.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/10/31/7.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/10/31/8.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Duplicate ACKs&lt;/strong&gt;: The receiver did not correctly receive the packet following the packet that is being ACKed twice.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;reliable-data-transfer-over-a-lossy-channel-with-bit-errors-rdt30&quot;&gt;Reliable Data Transfer over a Lossy Channel with Bit Errors: rdt3.0&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/10/31/9.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/10/31/10.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Duplicate data packets&lt;/strong&gt;: If a packet experiences a particularly large delay, the sender may retransmit the packet
even though neither the data packet nor its ACK have been lost.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Countdown timer&lt;/strong&gt;: A time-based retransmission mechanism that can interrupt the sender after a given amount of time
has expired.
    &lt;ol&gt;
      &lt;li&gt;Start the timer each time a packet is sent.&lt;/li&gt;
      &lt;li&gt;Respond to a timer interrupt.&lt;/li&gt;
      &lt;li&gt;Stop the timer.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/10/31/11.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Alternating-bit protocol&lt;/strong&gt;: Packet sequence numbers alternate between 0 and 1.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2️⃣-pipelined-reliable-data-transfer-protocols&quot;&gt;2️⃣ Pipelined Reliable Data Transfer Protocols&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/10/31/12.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/10/31/13.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Transmit the packet into the 1 Gbps link&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://latex.codecogs.com/svg.image?d_{trans}&amp;space;=&amp;space;\frac{L}{R}&amp;space;=&amp;space;\frac{8000&amp;space;bits}{10^9&amp;space;bits/sec}&amp;space;=&amp;space;8&amp;space;microseconds&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Stop-and-wait protocol has a rather dismal sender utilization U&lt;sub&gt;sender&lt;/sub&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://latex.codecogs.com/svg.image?U_{sender}&amp;space;=&amp;space;\frac{L/R}{RTT&amp;space;&amp;plus;&amp;space;L/R}&amp;space;=&amp;space;\frac{0.008}{30.008}&amp;space;=&amp;space;0.00027&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/10/31/14.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Pipelining&lt;/strong&gt;: The many in-transit sender-to-receiver packets can be visualized as filling a pipeline&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The consequences for reliable data transfer protocols:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The range of sequence numbers must be increased, since each in-transit packet must have a unique sequence number and 
there may be multiple, in-transmit, unacknowledged packets.&lt;/li&gt;
  &lt;li&gt;The sender and receiver sides of the protocols may have to buffer more than one packet. Minimally, the sender will
have to buffer packets that have been transmitted but not yet acknowledged. Buffering of correctly received packets may 
also be needed at the receiver, as discussed below.&lt;/li&gt;
  &lt;li&gt;The range of sequence numbers needed and the buffering requirements will depend on the manner in which a data transfer 
protocol responds to lost, corrupted, and overly delayed packets. Two basic approaches toward pipelined error recovery 
can be identified: &lt;strong&gt;Go-Back-N&lt;/strong&gt; and &lt;strong&gt;selective repeat&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;3️⃣-go-back-n-gbn&quot;&gt;3️⃣ Go-Back-N (GBN)&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Go-Back-N (GBN) protocol&lt;/strong&gt;: The sender is allowed to transmit multiple packets without waiting for an 
acknowledgement, but is constrained t have no more than some maximum allowable number, &lt;em&gt;N&lt;/em&gt;, of unacknowledged packets in
the pipeline.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/10/31/15.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Computer-Networking-Global-James-Kurose/dp/1292405465&quot; target=&quot;_blank&quot;&gt;Computer Networking 8th: A Top-Down Approach by James Kurose and Keith Ross&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Computer Network Lecture by &lt;a href=&quot;https://www.inu.ac.kr/user/indexSub.do?codyMenuSeq=2236524&amp;amp;siteId=isis&amp;amp;dum=dum&amp;amp;command=empDetail&amp;amp;empNum=24017&amp;amp;empSearchTab=01&amp;amp;deptCode=&amp;amp;siteId=isis&quot; target=&quot;_blank&quot;&gt;Seungsik Choi&lt;/a&gt; in &lt;a href=&quot;https://www.inu.ac.kr/&quot; target=&quot;_blank&quot;&gt;Incheon National University&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>nogamsung</name></author><category term="comsci" /><summary type="html"></summary></entry><entry><title type="html">Computer Network - Connectionless Transport UDP</title><link href="/Computer_Network-Connectionless_Transport_UDP" rel="alternate" type="text/html" title="Computer Network - Connectionless Transport UDP" /><published>2022-10-31T19:30:00+09:00</published><updated>2022-10-31T19:30:00+09:00</updated><id>/Computer_Network-Connectionless_Transport_UDP</id><content type="html" xml:base="/Computer_Network-Connectionless_Transport_UDP">&lt;h4 id=&quot;why-choose-udp-over-tcp&quot;&gt;Why choose UDP over TCP&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Finer application-level control over what data is sent, and when.&lt;/strong&gt; Under UDP, as soon as an application process 
passes data to UDP, UDP will package the data inside a UDP segment and immediately pass the segment to the network 
layer. TCP, however, has a congestion-control mechanism that throttles the transport-layer TCP sender when one or more 
links between the source and destination hosts become excessively congested.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;No connection establishment.&lt;/strong&gt; TCP uses a three-way handshake before it starts to transfer data. UDP just blasts 
away without any formal preliminaries. Thus, UDP does not introduce any delay to establish a connection.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;No connection state.&lt;/strong&gt; TCP maintains connection state in the end systems. This connection state includes receive and
send buffers, congestion-control parameters, and sequence and acknowledgment number parameters. UDP, however, does not 
maintain connection state and does not track any of these parameters. For this reason, a server devoted to a particular 
application can typically support many more active clients when the application runs over UDP rather than TCP.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Small packet header overhead.&lt;/strong&gt; The TCP segment has 20 bytes of header overhead in every segment, whereas UDP has
only 8 bytes of overhead.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/10/31/1.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;1️⃣-udp-segment-structure&quot;&gt;1️⃣ UDP Segment Structure&lt;/h2&gt;
&lt;p&gt;The application data occupies the data field of the UDP segment. For example, for DNS, the data field contains either a 
query message or a response message. For a streaming audio application, audio samples fills the field. The UDP header 
has only four fields, each consisting of two bytes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/10/31/2.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2️⃣-udp-checksum&quot;&gt;2️⃣ UDP Checksum&lt;/h2&gt;
&lt;p&gt;The UDP checksum provides for error detection. That is, the checksum is used to determine whether bits within the UDP 
segment have been altered as it moved from source to destination. UDP at the sender side performs the 1s complement of 
the sum of all the 16-bit words in the segment, with any overflow encountered during the sum being wrapped around.&lt;/p&gt;

&lt;h4 id=&quot;three-16-bit-words-example&quot;&gt;Three 16-bit Words Example&lt;/h4&gt;

&lt;p&gt;0110 0110 0110 0000&lt;br /&gt;
0101 0101 0101 0101&lt;br /&gt;
1000 1111 0000 1100&lt;/p&gt;

&lt;p&gt;The sum of first two of these 16-bit words is&lt;/p&gt;

&lt;p&gt;0110 0110 0110 0000&lt;br /&gt;
0101 0101 0101 0101&lt;br /&gt;
===================&lt;br /&gt;
1011 1011 1011 0101&lt;/p&gt;

&lt;p&gt;Adding the third word to the above sum gives&lt;/p&gt;

&lt;p&gt;0110 0110 0110 0000&lt;br /&gt;
1000 1111 0000 1100&lt;br /&gt;
===================&lt;br /&gt;
0100 1010 1100 0010&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;end-end principle&lt;/strong&gt;: States that since certain functionality (error detection, in this case) must be implemented on 
an end-end basis: “functions placed at the lower levels may be redundant or of little value when compared to the cost of providing them at the higher level”&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Computer-Networking-Global-James-Kurose/dp/1292405465&quot; target=&quot;_blank&quot;&gt;Computer Networking 8th: A Top-Down Approach by James Kurose and Keith Ross&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Computer Network Lecture by &lt;a href=&quot;https://www.inu.ac.kr/user/indexSub.do?codyMenuSeq=2236524&amp;amp;siteId=isis&amp;amp;dum=dum&amp;amp;command=empDetail&amp;amp;empNum=24017&amp;amp;empSearchTab=01&amp;amp;deptCode=&amp;amp;siteId=isis&quot; target=&quot;_blank&quot;&gt;Seungsik Choi&lt;/a&gt; in &lt;a href=&quot;https://www.inu.ac.kr/&quot; target=&quot;_blank&quot;&gt;Incheon National University&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>nogamsung</name></author><category term="comsci" /><summary type="html">Why choose UDP over TCP</summary></entry><entry><title type="html">Intelligent Information Systems - Crawling Data</title><link href="/Intelligent_Information-Crawling_Data" rel="alternate" type="text/html" title="Intelligent Information Systems - Crawling Data" /><published>2022-10-30T19:30:00+09:00</published><updated>2022-10-30T19:30:00+09:00</updated><id>/Intelligent_Information-Crawling_Data</id><content type="html" xml:base="/Intelligent_Information-Crawling_Data">&lt;h3 id=&quot;deliver-date-value-to-url&quot;&gt;Deliver Date Value to URL&lt;/h3&gt;
&lt;h4 id=&quot;search-movie-information-for-100-days-after-2020-07-01&quot;&gt;Search movie information for 100 days after 2020-07-01&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Make search target url&lt;/li&gt;
  &lt;li&gt;HTML document parsing&lt;/li&gt;
  &lt;li&gt;Extract target tag value&lt;/li&gt;
  &lt;li&gt;Save extracted value into a list&lt;/li&gt;
  &lt;li&gt;Data processing&lt;/li&gt;
  &lt;li&gt;Save date&lt;/li&gt;
  &lt;li&gt;Test by increasing the period from 1 to 2&lt;/li&gt;
  &lt;li&gt;Increase periods to 100&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urllib.request&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;bs4&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;date_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date_range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;2020-07-01&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;periods&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;freq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;D&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;movie_title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;movie_point&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;movie_date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;today&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;https://movie.naver.com/movie/sdb/rank/rmovie.nhn?sel=pnt&amp;amp;date=&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;%Y%m%d&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;html.parser&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;titles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;div&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;class&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;tit5&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;points&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;td&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;class&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;point&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;titles_text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;points_text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;titles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;points&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;titles_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos; &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;points_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;movie_title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;titles_text&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;movie_point&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;points_text&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;movie_date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;
        
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;movie_point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/10/30/1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;check-progress-status&quot;&gt;Check progress status&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Use tqdm module instead of print()&lt;/li&gt;
  &lt;li&gt;tqdm is &lt;strong&gt;t&lt;/strong&gt;a&lt;strong&gt;q&lt;/strong&gt;a&lt;strong&gt;d&lt;/strong&gt;u&lt;strong&gt;m&lt;/strong&gt; which is progress in Arabic&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urllib.request&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;bs4&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;tqdm.notebook&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tqdm&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# import tqdm module
&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;date_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date_range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;2020-07-01&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;periods&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;freq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;D&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;movie_title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;movie_point&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;movie_date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;today&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tqdm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# implement tqdm modlue
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;https://movie.naver.com/movie/sdb/rank/rmovie.nhn?sel=pnt&amp;amp;date=&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;%Y%m%d&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;html.parser&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;titles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;div&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;class&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;tit5&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;points&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;td&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;class&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;point&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;titles_text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;points_text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;titles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;points&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;titles_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos; &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;points_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;movie_title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;titles_text&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;movie_point&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;points_text&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;movie_date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/10/30/2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;make-data-into-a-table&quot;&gt;Make Data into a table&lt;/h3&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;frame&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;date&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;movie_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;title&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;movie_title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;point&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;movie_point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/10/30/3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;use-pivot_table&quot;&gt;Use pivot_table&lt;/h3&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;movie_point&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pivot_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;point&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;title&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aggfunc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;movie_point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/10/30/4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;movie_point&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pivot_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;point&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;title&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aggfunc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;movie_point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/10/30/5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Intelligent Information Systems Lecture by &lt;a href=&quot;https://www.inu.ac.kr/user/indexSub.do?codyMenuSeq=2236524&amp;amp;siteId=isis&amp;amp;dum=dum&amp;amp;command=empDetail&amp;amp;empNum=20201019&amp;amp;empSearchTab=01&amp;amp;deptCode=&amp;amp;siteId=isis&quot; target=&quot;_blank&quot;&gt;Youhyun Shin&lt;/a&gt; in &lt;a href=&quot;https://www.inu.ac.kr/&quot; target=&quot;_blank&quot;&gt;Incheon National University&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>nogamsung</name></author><category term="comsci" /><summary type="html">Deliver Date Value to URL Search movie information for 100 days after 2020-07-01 Make search target url HTML document parsing Extract target tag value Save extracted value into a list Data processing Save date Test by increasing the period from 1 to 2 Increase periods to 100</summary></entry><entry><title type="html">Computer Network - Multiplexing and Demultiplexing</title><link href="/Computer_Network-Multiplexing_and_Demultiplexing" rel="alternate" type="text/html" title="Computer Network - Multiplexing and Demultiplexing" /><published>2022-10-21T00:00:00+09:00</published><updated>2022-10-21T00:00:00+09:00</updated><id>/Computer_Network-Multiplexing_and_Demultiplexing</id><content type="html" xml:base="/Computer_Network-Multiplexing_and_Demultiplexing">&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Demultiplexing&lt;/strong&gt;: A job of delivering the data in a transport-layer segment to the correct socket.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Multiplexing&lt;/strong&gt;: A job of gathering data chunks at the source host from different sockets, encapsulating each data 
chunk with header information to create segments, and passing the segments to the network layer.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/10/20/1.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The requirement of transport-layer multiplexing:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Sockets have unique identifiers.&lt;/li&gt;
  &lt;li&gt;Each segment have special fields that indicate the socket to which the segment is to be delivered.&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Source port number field&lt;/strong&gt; and &lt;strong&gt;Destination port number field&lt;/strong&gt;: Port number consists of 16-bit number, ranging 
from 0 to 65535.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Well-known port numbers&lt;/strong&gt;: Port numbers that have restricted range from 0 to 1023.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/10/20/2.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;connectionless-multiplexing-and-demultiplexing&quot;&gt;Connectionless Multiplexing and Demultiplexing&lt;/h3&gt;
&lt;p&gt;Connectionless service does not require establishing any connection and termination process for transferring the data 
over a network.&lt;/p&gt;

&lt;h3 id=&quot;connection-oriented-multiplexing-and-demultiplexing&quot;&gt;Connection-Oriented Multiplexing and Demultiplexing&lt;/h3&gt;
&lt;p&gt;Connection-oriented service involves the creating and terminatino of the connection for sending the data between two or 
more devices.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;TCP socket
    &lt;ul&gt;
      &lt;li&gt;Identified by a four-tuple: source IP address, source port number, destination IP address, destination port number.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;UDP socket
    &lt;ul&gt;
      &lt;li&gt;If two TCp segments with different source IP addresses or port numbers arrive, it will be directed to two different 
sockets.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/10/20/3.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/10/20/4.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Computer-Networking-Global-James-Kurose/dp/1292405465&quot; target=&quot;_blank&quot;&gt;Computer Networking 8th: A Top-Down Approach by James Kurose and Keith Ross&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Computer Network Lecture by &lt;a href=&quot;https://www.inu.ac.kr/user/indexSub.do?codyMenuSeq=2236524&amp;amp;siteId=isis&amp;amp;dum=dum&amp;amp;command=empDetail&amp;amp;empNum=24017&amp;amp;empSearchTab=01&amp;amp;deptCode=&amp;amp;siteId=isis&quot; target=&quot;_blank&quot;&gt;Seungsik Choi&lt;/a&gt; in &lt;a href=&quot;https://www.inu.ac.kr/&quot; target=&quot;_blank&quot;&gt;Incheon National University&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.javatpoint.com/connection-oriented-vs-connectionless-service&quot; target=&quot;_blank&quot;&gt;Difference between connection-oriented and connectionless service in javaTpoint&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>nogamsung</name></author><category term="comsci" /><summary type="html">Demultiplexing: A job of delivering the data in a transport-layer segment to the correct socket. Multiplexing: A job of gathering data chunks at the source host from different sockets, encapsulating each data chunk with header information to create segments, and passing the segments to the network layer.</summary></entry><entry><title type="html">Unreal Engine - Timeline</title><link href="/Unreal_Engine-Timeline" rel="alternate" type="text/html" title="Unreal Engine - Timeline" /><published>2022-10-18T01:30:00+09:00</published><updated>2022-10-18T01:30:00+09:00</updated><id>/Unreal_Engine-Timeline</id><content type="html" xml:base="/Unreal_Engine-Timeline">&lt;h2 id=&quot;timeline&quot;&gt;Timeline&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Set a specific time and repeat a certain movement
    &lt;ul&gt;
      &lt;li&gt;E.g. At 5 sec move upwards and open a door, etc.&lt;/li&gt;
      &lt;li&gt;Express this in timeline
        &lt;ul&gt;
          &lt;li&gt;Timeline is a event that occurs in a time sequence&lt;/li&gt;
          &lt;li&gt;Parallel axis is time axis&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Timeline
    &lt;ul&gt;
      &lt;li&gt;Timeline is a change in value which occurs in time
        &lt;ul&gt;
          &lt;li&gt;X-axis is time and Y-axis is value&lt;/li&gt;
          &lt;li&gt;“Value” = “Track”&lt;/li&gt;
          &lt;li&gt;Track Category: float, vector, color, event&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Curve Input: Input keys to express a curve
        &lt;ul&gt;
          &lt;li&gt;Key = (time, value)&lt;/li&gt;
          &lt;li&gt;Adding key: shift + click&lt;/li&gt;
          &lt;li&gt;Interpolation between keys create a curve&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;timeline-example&quot;&gt;Timeline Example&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Actors spin example
    &lt;ul&gt;
      &lt;li&gt;Actor should spin
        &lt;ul&gt;
          &lt;li&gt;It should spin every second&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Create timeline: Float Track
        &lt;ul&gt;
          &lt;li&gt;1 spin / 1 sec = Change the float value from 0 to 360 every second in the timeline&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Timeline Node Output Pin
        &lt;ul&gt;
          &lt;li&gt;Update Output Pin: Continuous execution during the timeline&lt;/li&gt;
          &lt;li&gt;Finished Output Pin: End when timeline finishes&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Rotate Implementation (Connect update pin)
        &lt;ul&gt;
          &lt;li&gt;&lt;strong&gt;Make&lt;/strong&gt; Rotator: Make a structure from rotator 3 float values(Roll, Pitch, Yaw)
            &lt;ul&gt;
              &lt;li&gt;Opposite function: &lt;strong&gt;Break&lt;/strong&gt; Rotator [&lt;strong&gt;Make&lt;/strong&gt; and &lt;strong&gt;Break&lt;/strong&gt;]&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;SetRelativeRotation: Set rotation relative to the parent component&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;key-interpolation&quot;&gt;Key Interpolation&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Lerp
    &lt;ul&gt;
      &lt;li&gt;Linear Interpolation
        &lt;ul&gt;
          &lt;li&gt;Linear interpolation between two values&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Lerp Interpolation Function
        &lt;ul&gt;
          &lt;li&gt;Lerp(A, B, α) = A * (1 - α) + B * α = A + (B - A) * α&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Key Interpolation
    &lt;ul&gt;
      &lt;li&gt;Linear&lt;/li&gt;
      &lt;li&gt;Automatic&lt;/li&gt;
      &lt;li&gt;Ease In / Ease Out
        &lt;ul&gt;
          &lt;li&gt;Smooth animation&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;timeline-reverse-function&quot;&gt;Timeline Reverse Function&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Timeline input pin
    &lt;ul&gt;
      &lt;li&gt;Play input pin&lt;/li&gt;
      &lt;li&gt;Reverse input pin&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Timeline output pin
    &lt;ul&gt;
      &lt;li&gt;Direction output pin
        &lt;ul&gt;
          &lt;li&gt;Play direction data of current timeline&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;ETimelineDirection&lt;/strong&gt; value&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sliding-door&quot;&gt;Sliding Door&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;2 Door with a rail
    &lt;ul&gt;
      &lt;li&gt;Push to door forward and make it move left or right&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/10/17/screenshot-1.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;DoorLeft and DoorRight movement
    &lt;ul&gt;
      &lt;li&gt;Move -100 in x-axis for a second
        &lt;ul&gt;
          &lt;li&gt;(0, -50, 0), (0, 50, 0) -&amp;gt; (-100, -50, 0), (-100, 50, 0)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Next move +-100 in y-axis for a second
        &lt;ul&gt;
          &lt;li&gt;(-100, -50, 0), (-100, 50, 0) -&amp;gt; (-100, -150, 0), (-100, 150, 0)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sliding-door-implementation&quot;&gt;Sliding Door Implementation&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Arrow Component
    &lt;ul&gt;
      &lt;li&gt;Visible in editor&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Timeline
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Float track&lt;/strong&gt; cannot express linear interpolation -&amp;gt; Use &lt;strong&gt;Vector track&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;Timeline implementation (DoorRight)
        &lt;ul&gt;
          &lt;li&gt;Move -100 in x-axis for a second&lt;/li&gt;
          &lt;li&gt;Next, move +100 in y-axis for a second&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Movement
        &lt;ul&gt;
          &lt;li&gt;SetRelativeLocation&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/10/17/screenshot-2.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;reference&quot;&gt;Reference&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Entertainment Software Lecture by &lt;a href=&quot;https://www.inu.ac.kr/user/indexSub.do?codyMenuSeq=1282578&amp;amp;siteId=isis&amp;amp;dum=dum&amp;amp;command=empDetail&amp;amp;empNum=24008&amp;amp;empSearchTab=01&amp;amp;deptCode=&amp;amp;siteId=isis&quot; target=&quot;_blank&quot;&gt;Jongseung Park&lt;/a&gt; in &lt;a href=&quot;https://www.inu.ac.kr/&quot; target=&quot;_blank&quot;&gt;Incheon National University&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;amp;ejkGb=KOR&amp;amp;barcode=9788968482809&quot; target=&quot;_blank&quot;&gt;실전 게임 제작으로 배우는 언리얼 엔진 4 by 윤인성&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;amp;ejkGb=KOR&amp;amp;barcode=9791156005896&quot; target=&quot;_blank&quot;&gt;언리얼 게임개봘과 시뮬레이션 by 박종승, 오경수&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.unrealengine.com/4.27/en-US/&quot;&gt;Unreal Engine Document&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>nogamsung</name></author><category term="etc" /><summary type="html">Timeline Set a specific time and repeat a certain movement E.g. At 5 sec move upwards and open a door, etc. Express this in timeline Timeline is a event that occurs in a time sequence Parallel axis is time axis Timeline Timeline is a change in value which occurs in time X-axis is time and Y-axis is value “Value” = “Track” Track Category: float, vector, color, event Curve Input: Input keys to express a curve Key = (time, value) Adding key: shift + click Interpolation between keys create a curve</summary></entry><entry><title type="html">Computer Network - Introduction and Transport-Layer Services</title><link href="/Computer_Network-Introduction_and_Transport-Layer_Services" rel="alternate" type="text/html" title="Computer Network - Introduction and Transport-Layer Services" /><published>2022-10-17T19:30:00+09:00</published><updated>2022-10-17T19:30:00+09:00</updated><id>/Computer_Network-Introduction_and_Transport-Layer_Services</id><content type="html" xml:base="/Computer_Network-Introduction_and_Transport-Layer_Services">&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Logical communication&lt;/strong&gt;: Allows application processes to freely send messages to each other, without worrying about 
the details of the physical infrastructure used to carry these messages.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1️⃣-relationship-between-transport-and-network-layers&quot;&gt;1️⃣ Relationship Between Transport and Network Layers&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;assets/screenshots/2022/10/17/screenshot-3.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2️⃣-overview-of-the-transport-layer-in-the-internet&quot;&gt;2️⃣ Overview of the Transport Layer in the Internet&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;UDP&lt;/strong&gt;: A protocol that is unreliable and connectionless service to the invoking application.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;TCP&lt;/strong&gt;: A protocol that is reliable and connection-oriented service to the invoking application.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;IP service mode&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Best-effort delivery service&lt;/strong&gt;: The IP service model that makes “best effort” to deliver segments between 
communicating hosts.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Unreliable service&lt;/strong&gt;: The IP service model makes no guarantees. Specifically, it does not guarantee segment 
delivery, orderly delivery of segments, and the integrity of the data in the segments.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Reliable data transfer&lt;/strong&gt;: TCP, using flow control, sequence numbers, acknowledgements, and timers, TCP ensures that 
data is delivered from sending process to receiving process, correctly and in order.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Congestion control&lt;/strong&gt;: TCP prevents any one TCP connection from swamping the links and routers between communicating 
hosts with an excessive amount of traffic.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Computer-Networking-Global-James-Kurose/dp/1292405465&quot; target=&quot;_blank&quot;&gt;Computer Networking 8th: A Top-Down Approach by James Kurose and Keith Ross&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Computer Network Lecture by &lt;a href=&quot;https://www.inu.ac.kr/user/indexSub.do?codyMenuSeq=2236524&amp;amp;siteId=isis&amp;amp;dum=dum&amp;amp;command=empDetail&amp;amp;empNum=24017&amp;amp;empSearchTab=01&amp;amp;deptCode=&amp;amp;siteId=isis&quot; target=&quot;_blank&quot;&gt;Seungsik Choi&lt;/a&gt; in &lt;a href=&quot;https://www.inu.ac.kr/&quot; target=&quot;_blank&quot;&gt;Incheon National University&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>nogamsung</name></author><category term="comsci" /><summary type="html">Logical communication: Allows application processes to freely send messages to each other, without worrying about the details of the physical infrastructure used to carry these messages.</summary></entry></feed>